class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int x) { val = x; }
}

public class KthSmallestBST {
    private int count = 0;
    private int result = -1;

    public int kthSmallest(TreeNode root, int k) {
        inorder(root, k);
        return result;
    }

    private void inorder(TreeNode root, int k) {
        if (root == null) return;

        inorder(root.left, k);

        count++;
        if (count == k) {
            result = root.val;
            return;
        }

        inorder(root.right, k);
    }

    // Test example
    public static void main(String[] args) {
        /*
          Example 1:
          Input: root = [3,1,4,null,2], k = 1
          Output: 1
        */
        TreeNode root1 = new TreeNode(3);
        root1.left = new TreeNode(1);
        root1.right = new TreeNode(4);
        root1.left.right = new TreeNode(2);

        KthSmallestBST solution = new KthSmallestBST();
        System.out.println(solution.kthSmallest(root1, 1)); // Output: 1

        /*
          Example 2:
          Input: root = [5,3,6,2,4,null,null,1], k = 3
          Output: 3
        */
        TreeNode root2 = new TreeNode(5);
        root2.left = new TreeNode(3);
        root2.right = new TreeNode(6);
        root2.left.left = new TreeNode(2);
        root2.left.right = new TreeNode(4);
        root2.left.left.left = new TreeNode(1);

        System.out.println(solution.kthSmallest(root2, 3)); // Output: 3
    }
}
