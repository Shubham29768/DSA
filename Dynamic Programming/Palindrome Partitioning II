public class Solution {
    public int minCut(String s) {
        int n = s.length();
        int[] cuts = new int[n];
        boolean[][] isPalindrome = new boolean[n][n];

        for (int j = 0; j < n; j++) {
            int minCut = j;  // max cuts possible for substring s[0..j]
            for (int i = 0; i <= j; i++) {
                if (s.charAt(i) == s.charAt(j) && (j - i < 2 || isPalindrome[i + 1][j - 1])) {
                    isPalindrome[i][j] = true;
                    if (i == 0) {
                        minCut = 0;
                    } else {
                        minCut = Math.min(minCut, cuts[i - 1] + 1);
                    }
                }
            }
            cuts[j] = minCut;
        }

        return cuts[n - 1];
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        System.out.println(sol.minCut("aab"));  // Output: 1
        System.out.println(sol.minCut("a"));    // Output: 0
        System.out.println(sol.minCut("ab"));   // Output: 1
    }
}
