import java.util.*;

public class LongestStringChain {
    public int longestStrChain(String[] words) {
        Arrays.sort(words, Comparator.comparingInt(String::length));
        Map<String, Integer> dp = new HashMap<>();
        int maxChain = 1;

        for (String word : words) {
            int best = 1;
            for (int i = 0; i < word.length(); i++) {
                String predecessor = word.substring(0, i) + word.substring(i + 1);
                if (dp.containsKey(predecessor)) {
                    best = Math.max(best, dp.get(predecessor) + 1);
                }
            }
            dp.put(word, best);
            maxChain = Math.max(maxChain, best);
        }

        return maxChain;
    }

    public static void main(String[] args) {
        LongestStringChain solver = new LongestStringChain();

        System.out.println(solver.longestStrChain(new String[]{"a","b","ba","bca","bda","bdca"})); // Output: 4
        System.out.println(solver.longestStrChain(new String[]{"xbc","pcxbcf","xb","cxbc","pcxbc"})); // Output: 5
        System.out.println(solver.longestStrChain(new String[]{"abcd","dbqca"})); // Output: 1
    }
}
