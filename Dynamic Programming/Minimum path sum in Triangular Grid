import java.util.List;

public class MinimumTotal {

    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();

        // Copy the last row as our DP array
        int[] dp = new int[n];
        for (int i = 0; i < n; i++) {
            dp[i] = triangle.get(n - 1).get(i);
        }

        // Bottom-up DP from second last row
        for (int row = n - 2; row >= 0; row--) {
            for (int col = 0; col <= row; col++) {
                dp[col] = triangle.get(row).get(col) + Math.min(dp[col], dp[col + 1]);
            }
        }

        return dp[0]; // Top element contains the result
    }

    // Test the code
    public static void main(String[] args) {
        MinimumTotal solver = new MinimumTotal();

        List<List<Integer>> triangle1 = List.of(
            List.of(2),
            List.of(3, 4),
            List.of(6, 5, 7),
            List.of(4, 1, 8, 3)
        );

        List<List<Integer>> triangle2 = List.of(
            List.of(-10)
        );

        System.out.println(solver.minimumTotal(triangle1)); // Output: 11
        System.out.println(solver.minimumTotal(triangle2)); // Output: -10
    }
}
