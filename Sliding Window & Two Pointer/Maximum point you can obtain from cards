public class MaxPointsFromCards {
    public static int maxScore(int[] cardPoints, int k) {
        int n = cardPoints.length;
        int total = 0;

        // Calculate total sum
        for (int point : cardPoints) {
            total += point;
        }

        // Find minimum sum of subarray with length n - k
        int windowSize = n - k;
        int windowSum = 0;
        int minWindowSum = Integer.MAX_VALUE;

        for (int i = 0; i < n; i++) {
            windowSum += cardPoints[i];

            // Shrink window if it exceeds the target size
            if (i >= windowSize) {
                windowSum -= cardPoints[i - windowSize];
            }

            if (i >= windowSize - 1) {
                minWindowSum = Math.min(minWindowSum, windowSum);
            }
        }

        return total - minWindowSum;
    }

    public static void main(String[] args) {
        System.out.println(maxScore(new int[]{1, 2, 3, 4, 5, 6, 1}, 3)); // Output: 12
        System.out.println(maxScore(new int[]{2, 2, 2}, 2));             // Output: 4
        System.out.println(maxScore(new int[]{9, 7, 7, 9, 7, 7, 9}, 7)); // Output: 55
    }
}
