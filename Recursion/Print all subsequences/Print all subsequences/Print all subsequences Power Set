import java.util.*;

public class PowerSetGenerator {

    public static List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(nums, 0, new ArrayList<>(), result);
        return result;
    }

    private static void backtrack(int[] nums, int start, List<Integer> current, List<List<Integer>> result) {
        result.add(new ArrayList<>(current)); // Add the current subset to the result
        for (int i = start; i < nums.length; i++) {
            current.add(nums[i]); // Choose
            backtrack(nums, i + 1, current, result); // Explore
            current.remove(current.size() - 1); // Un-choose (backtrack)
        }
    }

    public static void main(String[] args) {
        int[] nums = {1, 2, 3}; // You can change the input here
        List<List<Integer>> subsets = subsets(nums);

        System.out.println("All subsets:");
        for (List<Integer> subset : subsets) {
            System.out.println(subset);
        }
    }
}
