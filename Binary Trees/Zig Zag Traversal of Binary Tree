import java.util.*;

// Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode() {}

    TreeNode(int val) {
        this.val = val;
    }

    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();

        if (root == null) return result;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean leftToRight = true; // zigzag toggle

        while (!queue.isEmpty()) {
            int levelSize = queue.size();
            LinkedList<Integer> level = new LinkedList<>();

            for (int i = 0; i < levelSize; i++) {
                TreeNode node = queue.poll();

                // Insert in order based on direction
                if (leftToRight)
                    level.addLast(node.val);
                else
                    level.addFirst(node.val);

                // Add child nodes for next level
                if (node.left != null) queue.offer(node.left);
                if (node.right != null) queue.offer(node.right);
            }

            result.add(level);
            leftToRight = !leftToRight; // flip direction
        }

        return result;
    }

    // Test the method
    public static void main(String[] args) {
        Solution sol = new Solution();

        // Example 1: [3,9,20,null,null,15,7]
        TreeNode root1 = new TreeNode(3);
        root1.left = new TreeNode(9);
        root1.right = new TreeNode(20, new TreeNode(15), new TreeNode(7));
        System.out.println("Example 1: " + sol.zigzagLevelOrder(root1)); // [[3], [20, 9], [15, 7]]

        // Example 2: [1]
        TreeNode root2 = new TreeNode(1);
        System.out.println("Example 2: " + sol.zigzagLevelOrder(root2)); // [[1]]

        // Example 3: []
        TreeNode root3 = null;
        System.out.println("Example 3: " + sol.zigzagLevelOrder(root3)); // []
    }
}
