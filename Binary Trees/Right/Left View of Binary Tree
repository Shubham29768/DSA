import java.util.*;

// Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode() {}

    TreeNode(int val) {
        this.val = val;
    }

    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        while (!queue.isEmpty()) {
            int levelSize = queue.size();
            TreeNode rightMost = null;

            for (int i = 0; i < levelSize; i++) {
                TreeNode node = queue.poll();
                rightMost = node;

                if (node.left != null) queue.offer(node.left);
                if (node.right != null) queue.offer(node.right);
            }

            // Add the last node in this level (rightmost)
            if (rightMost != null) result.add(rightMost.val);
        }

        return result;
    }

    // Test the method
    public static void main(String[] args) {
        Solution sol = new Solution();

        // Example 1: [1,2,3,null,5,null,4]
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(2, null, new TreeNode(5));
        root1.right = new TreeNode(3, null, new TreeNode(4));
        System.out.println("Example 1: " + sol.rightSideView(root1)); // [1,3,4]

        // Example 2: [1,2,3,4,null,null,null,5]
        TreeNode root2 = new TreeNode(1);
        root2.left = new TreeNode(2, new TreeNode(4, new TreeNode(5), null), null);
        root2.right = new TreeNode(3);
        System.out.println("Example 2: " + sol.rightSideView(root2)); // [1,3,4,5]

        // Example 3: [1,null,3]
        TreeNode root3 = new TreeNode(1, null, new TreeNode(3));
        System.out.println("Example 3: " + sol.rightSideView(root3)); // [1,3]

        // Example 4: []
        TreeNode root4 = null;
        System.out.println("Example 4: " + sol.rightSideView(root4)); // []
    }
}
