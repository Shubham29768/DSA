// Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    
    TreeNode() {}
    
    TreeNode(int val) {
        this.val = val;
    }
    
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution {
    public int maxDepth(TreeNode root) {
        if (root == null) {
            return 0; // base case
        }

        int leftDepth = maxDepth(root.left);  // depth of left subtree
        int rightDepth = maxDepth(root.right); // depth of right subtree

        return Math.max(leftDepth, rightDepth) + 1; // max depth + current node
    }

    // You can use this main method to test the function
    public static void main(String[] args) {
        Solution sol = new Solution();

        // Creating the binary tree from Example 1: [3,9,20,null,null,15,7]
        TreeNode root = new TreeNode(3);
        root.left = new TreeNode(9);
        root.right = new TreeNode(20);
        root.right.left = new TreeNode(15);
        root.right.right = new TreeNode(7);

        System.out.println("Maximum Depth: " + sol.maxDepth(root)); // Output: 3
    }
}
