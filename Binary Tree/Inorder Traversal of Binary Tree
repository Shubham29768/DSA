import java.util.*;

class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int val) { this.val = val; }
}

public class InorderTraversal {

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        inorder(root, result);
        return result;
    }

    private void inorder(TreeNode node, List<Integer> list) {
        if (node == null) return;
        inorder(node.left, list);      // Left
        list.add(node.val);            // Root
        inorder(node.right, list);     // Right
    }

    public static void main(String[] args) {
        // Example: [1, null, 2, 3] => Tree structure
        TreeNode root = new TreeNode(1);
        root.right = new TreeNode(2);
        root.right.left = new TreeNode(3);

        InorderTraversal solver = new InorderTraversal();
        System.out.println(solver.inorderTraversal(root)); // Output: [1, 3, 2]
    }
}
