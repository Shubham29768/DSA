import java.util.HashMap;

public class SubarrayXorEqualsK {

    public static int countSubarraysWithXOR(int[] nums, int k) {
        HashMap<Integer, Integer> prefixXorMap = new HashMap<>();
        int count = 0;
        int xor = 0;

        for (int num : nums) {
            xor ^= num; // Current prefix XOR

            // Case 1: If current XOR itself is equal to k
            if (xor == k) {
                count++;
            }

            // Case 2: Check if there exists a prefix XOR that would make xor ^ prev = k
            int required = xor ^ k;
            count += prefixXorMap.getOrDefault(required, 0);

            // Store the current prefix XOR in map
            prefixXorMap.put(xor, prefixXorMap.getOrDefault(xor, 0) + 1);
        }

        return count;
    }

    public static void main(String[] args) {
        int[] nums1 = {4, 2, 2, 6, 4};
        int k1 = 6;
        System.out.println("Output: " + countSubarraysWithXOR(nums1, k1)); // Output: 4

        int[] nums2 = {5, 6, 7, 8, 9};
        int k2 = 5;
        System.out.println("Output: " + countSubarraysWithXOR(nums2, k2)); // Output: 2
    }
}
